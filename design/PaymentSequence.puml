@startuml
User --> Frontend: checkout button
Frontend -> OrderManager: POST /orders
note left
POST /orders
{
    name: "MZo",
    email: "user@domain.com",
    reservationId: "b315d65a-37b8-4ba2-8417-031592afd673"
}
end note
activate OrderManager
OrderManager --> OrderManager: generateOrderId
OrderManager --> OrderManager: createOrder
note right
Order {
    orderId: "abc123"
    reservationId: "bcd345"
    status: RESERVED
    creationTimestamp: 2018/01/30
    name: "MZo"
    email: "user@domain.com"
    paymentAddress: null
    paymentId: null
    lastUpdated: 2018/01/30
}
end note
OrderManager --> DB: save Order
OrderManager --> Frontend: orderId
deactivate OrderManager
Frontend --> OrderManager: GET /orders/{orderId}/approval
activate OrderManager
OrderManager --> PaymentManager: initiatePayment(PaymentRequest)
note right
PaymentRequest {
    "tickets": [
      {
        "name": "Adele Concert 2018 Wembley",
        "quantity": "2",
        "price": "100",
        "currency": "EUR"
      }
    ],
    "amount": {
        "currency": "EUR",
        "total": "200",
    },
    return_url,
    cancel_url,
}
end note
activate PaymentManager
PaymentManager --> PaymentManager: createPayment
PaymentManager --> PaymentManager: createAPIContext
PaymentManager --> PaypalAPI: payment.create
activate PaypalAPI
note right: paypal-create-request.json
PaypalAPI --> PaymentManager: paypal-create-response.json
deactivate PaypalAPI
PaymentManager --> OrderManager: paymentResponse
note right
PaymentResponse {
    paymentId: "PAY-3CM18082Y9532445FLJYMNTY",
    approveUrl: "URL",
    status: CREATED/FAILED
}
end note
deactivate PaymentManager
OrderManager --> DB: updateOrder(PAYMENT_CREATED, paymentId)
OrderManager --> Frontend: redirect url info JSON
deactivate OrderManager
Frontend --> Paypal: GET /{approvalUrl}
note left: {approvalUrl} is the actual PayPal URL
activate Paypal
Paypal --> Paypal: fill and submit form
Paypal --> OrderManager: GET /orders/{orderId}/payment?status=<state>&payerID=abcd1234&paymentId=PAY-0YY78928127449742LJ477NQ
deactivate Paypal

activate OrderManager
note left: this is the {return_url} sent to Paypal
alt order state = PAYMENT_CREATED & status = success
OrderManager --> DB: updateOrder(PAYMENT_APPROVED, orderId, payerId)
note right: Order expires after 10 minutes, however scheduler checks 11 minute interval
OrderManager --> PaymentManager: ExecutePaymentRequest
note right: ExecutePaymentRequest: paymentId, payerId

PaymentManager --> PaymentManager: createPaymentExecution
PaymentManager --> PaypalAPI: payment.execute
PaypalAPI --> PaymentManager: paypal-execute-response.json
PaymentManager --> OrderManager: ExecutePaymentResponse
note right
ExecutePaymentResponse {
  paymentId: "PAY-0YY78928127449742LJ477NQ",
  state: "approved"
}
end note
OrderManager --> DB: updateOrderStatus(PAID, orderId)
OrderManager --> TicketMaster: closeReservationCommand

else order state = PAYMENT_CREATED & status == cancelled
OrderManager --> DB: updateOrder(PAYMENT_CANCELLED, orderId)
OrderManager --> TicketMaster: cancelReservationCommand
else order state = EXPIRED
OrderManager --> PaymentManager: CancelPaymentRequest?
PaymentManager --> PaymentManager: createPaymentCancellation?
PaymentManager --> PaypalAPI: payment.cancel?
end

OrderManager --> Frontend: REDIRECT /paymentResultPage
deactivate OrderManager
Frontend --> OrderManager: GET /orders/{orderId}
activate OrderManager
OrderManager --> DB: fetchOrder(orderId)
OrderManager --> Frontend: order JSON
deactivate OrderManager
@enduml